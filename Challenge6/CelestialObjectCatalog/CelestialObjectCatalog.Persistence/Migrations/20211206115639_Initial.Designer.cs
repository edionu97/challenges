// <auto-generated />
using System;
using CelestialObjectCatalog.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CelestialObjectCatalog.Persistence.Migrations
{
    [DbContext(typeof(CelestialObjectCatalogDbContext))]
    [Migration("20211206115639_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CelestialObjectCatalog.Persistence.Models.CelestialObject", b =>
                {
                    b.Property<Guid>("CelestialObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<double>("EquatorialDiameter")
                        .HasColumnType("float");

                    b.Property<double>("Mass")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("SurfaceTemperature")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CelestialObjectId");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_CelestialObjects_Name")
                        .IsClustered(false);

                    b.HasIndex("Type")
                        .HasDatabaseName("IX_CelestialObjects_Type")
                        .IsClustered(false);

                    b.ToTable("CelestialObjects");
                });

            modelBuilder.Entity("CelestialObjectCatalog.Persistence.Models.CelestialObjectDiscovery", b =>
                {
                    b.Property<Guid>("CelestialObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscoverySourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DiscoveryDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("CelestialObjectId", "DiscoverySourceId");

                    b.HasIndex("DiscoverySourceId");

                    b.ToTable("CelestialObjectDiscoveries");
                });

            modelBuilder.Entity("CelestialObjectCatalog.Persistence.Models.DiscoverySource", b =>
                {
                    b.Property<Guid>("DiscoverySourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StateOwner")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("DiscoverySourceId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("StateOwner")
                        .HasDatabaseName("IX_DiscoverySources_StateOwner")
                        .IsClustered(false);

                    b.ToTable("DiscoverySources");
                });

            modelBuilder.Entity("CelestialObjectCatalog.Persistence.Models.CelestialObjectDiscovery", b =>
                {
                    b.HasOne("CelestialObjectCatalog.Persistence.Models.CelestialObject", "CelestialObject")
                        .WithMany("CelestialObjectDiscoveries")
                        .HasForeignKey("CelestialObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CelestialObjectCatalog.Persistence.Models.DiscoverySource", "DiscoverySource")
                        .WithMany("CelestialObjectDiscoveries")
                        .HasForeignKey("DiscoverySourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CelestialObject");

                    b.Navigation("DiscoverySource");
                });

            modelBuilder.Entity("CelestialObjectCatalog.Persistence.Models.CelestialObject", b =>
                {
                    b.Navigation("CelestialObjectDiscoveries");
                });

            modelBuilder.Entity("CelestialObjectCatalog.Persistence.Models.DiscoverySource", b =>
                {
                    b.Navigation("CelestialObjectDiscoveries");
                });
#pragma warning restore 612, 618
        }
    }
}
